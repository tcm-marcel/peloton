//===----------------------------------------------------------------------===//
//
//                         Peloton
//
// bytecode_instructions.def
//
// Identification: src/include/codegen/interpreter/bytecode_instructions.def
//
// Copyright (c) 2015-2018, Carnegie Mellon University Database Group
//
//===----------------------------------------------------------------------===//

#ifndef HANDLE_INST
#define HANDLE_INST(op)
#endif

#ifndef HANDLE_TYPED_INST
#define HANDLE_TYPED_INST(op, type) HANDLE_INST(op ## _ ## type)
#endif

#ifndef HANDLE_OVERFLOW_TYPED_INST
#define HANDLE_OVERFLOW_TYPED_INST(op, type) HANDLE_TYPED_INST(op, type)
#endif

#ifndef HANDLE_SELECT_INST
#define HANDLE_SELECT_INST(op) HANDLE_INST(op)
#endif

#ifndef HANDLE_RET_INST
#define HANDLE_RET_INST(op) HANDLE_INST(op)
#endif

#ifndef HANDLE_EXTERNAL_CALL_INST
#define HANDLE_EXTERNAL_CALL_INST(op) HANDLE_INST(op)
#endif

#ifndef HANDLE_INTERNAL_CALL_INST
#define HANDLE_INTERNAL_CALL_INST(op) HANDLE_INST(op)
#endif

#define CREATE_FOR_ALL_TYPES(func, op) \
func(op, i8) \
func(op, i16) \
func(op, i32) \
func(op, i64) \
func(op, float) \
func(op, double)

#define GET_FIRST_ALL_TYPES(op) (op ## _i8)

#define CREATE_FOR_INT_TYPES(func, op) \
func(op, i8) \
func(op, i16) \
func(op, i32) \
func(op, i64)

#define GET_FIRST_INT_TYPES(op) (op ## _i8)

#define CREATE_FOR_FLOAT_TYPES(func, op) \
func(op, float) \
func(op, double)

#define GET_FIRST_FLOAT_TYPES(op) (op ## _float)


CREATE_FOR_ALL_TYPES(HANDLE_TYPED_INST, add)
CREATE_FOR_ALL_TYPES(HANDLE_TYPED_INST, sub)
CREATE_FOR_ALL_TYPES(HANDLE_TYPED_INST, mul)
CREATE_FOR_ALL_TYPES(HANDLE_TYPED_INST, div)     // division for unsigned integer and floating point
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, sdiv)    // division for signed integer
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, urem)    // remainder for unsigned integer
CREATE_FOR_FLOAT_TYPES(HANDLE_TYPED_INST, frem)  // remainder for floating point
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, srem)    // remainder for signed integer
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, shl)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, lshr)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, ashr)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, and)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, or)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, xor)

HANDLE_INST(extractvalue)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, load)
CREATE_FOR_ALL_TYPES(HANDLE_TYPED_INST, store)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, alloca_array)
HANDLE_INST(alloca)

CREATE_FOR_ALL_TYPES(HANDLE_TYPED_INST, cmp_eq)  // compare for unsigned integer and floating point
CREATE_FOR_ALL_TYPES(HANDLE_TYPED_INST, cmp_ne)  // compare for unsigned integer and floating point
CREATE_FOR_ALL_TYPES(HANDLE_TYPED_INST, cmp_gt)  // compare for unsigned integer and floating point
CREATE_FOR_ALL_TYPES(HANDLE_TYPED_INST, cmp_lt)  // compare for unsigned integer and floating point
CREATE_FOR_ALL_TYPES(HANDLE_TYPED_INST, cmp_ge)  // compare for unsigned integer and floating point
CREATE_FOR_ALL_TYPES(HANDLE_TYPED_INST, cmp_le)  // compare for unsigned integer and floating point
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, cmp_sgt) // compare for signed integer
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, cmp_slt) // compare for signed integer
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, cmp_sge) // compare for signed integer
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, cmp_sle) // compare for signed integer

HANDLE_INST(sext_i8_i16)
HANDLE_INST(sext_i8_i32)
HANDLE_INST(sext_i8_i64)
HANDLE_INST(sext_i16_i32)
HANDLE_INST(sext_i16_i64)
HANDLE_INST(sext_i32_i64)
HANDLE_INST(zext_i8_i16)
HANDLE_INST(zext_i8_i32)
HANDLE_INST(zext_i8_i64)
HANDLE_INST(zext_i16_i32)
HANDLE_INST(zext_i16_i64)
HANDLE_INST(zext_i32_i64)

CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, doubletosi)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, doubletoui)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, sitodouble)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, uitodouble)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, floattosi)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, floattoui)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, sitofloat)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, uitofloat)

HANDLE_INST(gep_offset)                            // struct access of GEP instruction (accumulated)
CREATE_FOR_INT_TYPES(HANDLE_TYPED_INST, gep_array) // array access of GEP instruction (inline)
HANDLE_INST(phi_mov)
HANDLE_INST(nop_mov)
HANDLE_SELECT_INST(select)
HANDLE_EXTERNAL_CALL_INST(call_external)
HANDLE_INTERNAL_CALL_INST(call_internal)

HANDLE_RET_INST(ret)
HANDLE_INST(branch_uncond)
HANDLE_INST(branch_cond)
HANDLE_INST(branch_cond_ft)

HANDLE_INST(llvm_memcpy)
HANDLE_INST(llvm_memmove)
HANDLE_INST(llvm_memset)

CREATE_FOR_INT_TYPES(HANDLE_OVERFLOW_TYPED_INST, llvm_uadd_overflow)
CREATE_FOR_INT_TYPES(HANDLE_OVERFLOW_TYPED_INST, llvm_sadd_overflow)
CREATE_FOR_INT_TYPES(HANDLE_OVERFLOW_TYPED_INST, llvm_usub_overflow)
CREATE_FOR_INT_TYPES(HANDLE_OVERFLOW_TYPED_INST, llvm_ssub_overflow)
CREATE_FOR_INT_TYPES(HANDLE_OVERFLOW_TYPED_INST, llvm_umul_overflow)
CREATE_FOR_INT_TYPES(HANDLE_OVERFLOW_TYPED_INST, llvm_smul_overflow)

HANDLE_INST(llvm_sse42_crc32)

#undef HANDLE_INST
#undef HANDLE_TYPED_INST
#undef HANDLE_OVERFLOW_TYPED_INST
#undef HANDLE_SELECT_INST
#undef HANDLE_RET_INST
#undef HANDLE_EXTERNAL_CALL_INST
#undef HANDLE_INTERNAL_CALL_INST